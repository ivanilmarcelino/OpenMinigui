[Information]
PROGRAM   = Blank-an example of a finished program with timers
ABOUTPRG  = Заготовка-пример готовой программы с таймерами
PROGVERS  = 2023.08.12
Copyright = Copyright (c) 2023, Verchenko A.G., Russia, Dmitrov.
Email     = E-mail: verchenkoag@gmail.com
ExeName   = W:\HB_ProjectMiniGui\@PROJECT\Шаблон-программы\Demo_timer.exe
Developed_in   = Harbour MiniGUI Extended Edition 23.09.1 (32-bit) ANSI
xBase_compiler = Harbour 3.2.0dev (r2307062207)
C_compiler     = Borland C++ 5.8.2 (32-bit)
cRemEn = This file contains variables for the program that are not available to users
cRemRu = В этом файле содержатся переменные для программы которые не доступны пользователям


;////////////////////////////////////////////////////////////////////
[COMVAR]
Ver_Cnfg   = 4.23.0914  ; по этому номеру версии сравнивается с сайтом обновления
Ver_Date   = 14.09.23   
Ver_FR_dll = 4.11.8
Calc_Year  = 2023       ; запрет расчёта больше этого года

;////////////////////////////////////////////////////////////////////
[ОТКРЫТИЕ_ВСЕХ_БАЗ]
СЕКЦИЯ_ВСЕХ_БАЗ_1 = Открытие_БД_справочников
СЕКЦИЯ_ВСЕХ_БАЗ_2 = Открытие_БД_общие
СЕКЦИЯ_ВСЕХ_БАЗ_3 = Открытие_БД_оплата
СЕКЦИЯ_ВСЕХ_БАЗ_4 = Открытие_БД_абонентов
СЕКЦИЯ_ВСЕХ_БАЗ_5 = Открытие_БД_договоров

[ОТКРЫТИЕ_БД_СПРАВОЧНИКОВ]
БАЗА 1  = {"Operat.Dbf" , "Operat0" , "Operat2" , "Operat" , "SHARED", 3}
БАЗА 2  = {"City.Dbf"   , "City0"   , "City2"   , "City"   , "SHARED", 3}
БАЗА 3  = {"Okrug.Dbf"  , "Okrug0"  , "Okrug2"  , "Okrug"  , "SHARED", 3}
БАЗА 4  = {"Street.Dbf" , "Street0" , "Street2" , "Street" , "SHARED", 3}
БАЗА 5  = {"Filial.Dbf" , "Filial0" , "Filial2" , "Filial" , "SHARED", 3}
БАЗА 6  = {"FiliDop.dbf", "FiliDop0", "FiliDop2", "FiliDop", "SHARED", 3}
БАЗА 7  = {"FiliDsp.dbf", "FiliDsp0", "FiliDsp2", "FiliDsp", "SHARED", 3}
БАЗА 8  = {"Firma.Dbf"  , "Firma0"  , "Firma2"  , "Firma"  , "SHARED", 3}
БАЗА 9  = {"Process.dbf", "Process0", "Process2", "Process", "SHARED", 3}
БАЗА 10 = {"test.dbf"   , "test0"   , "test2"   , "test"   , "SHARED", 3}
БАЗА 11 = {"gap_4.dbf"  , "gap_40"  , "gap_42"  , "gap_4"  , "SHARED", 3}

;//////////////////////////////////////////////////////////////////////
[Таблица_БД_абоненты]
Win_aBackcolor = {195, 224, 133}    ; цвет окна
Win_Rezerv = в качестве примера

;//////////////////////////////////////////////////////////////////////
[ТАБЛИЦЯ_БД_АБОНЕНТИ]
; ------- параметры окна
Win_aBackcolor = {168,242,179}      ; цвет окна
Win_cIcon      = i_Menu32x2         ; иконка
Win_cTitle     = Таблиця за абонентами - WINDOWTYPE STANDARD: Button_3: 3 Sample 3 / all parameters in Demo_timer.cnfg
Win_lWait      = .T.   ; .T.="WAIT", .F.="NOWAIT" - ACTIVATE WINDOW cForm T/F
Win_lCenter    = .F.   ; .T. - окно по центру
Win_nPosY      = 0
Win_nPosX      = 0
Win_nPosW      = -1    ; App.Cargo:aDisplayMode(1)  
Win_nPosH      = -1    ; App.Cargo:aDisplayMode(2) - GetTaskBarHeight() // высота Панели задач Desktop
Win_lTopmost   = .F.   ; This.Topmost := lTopmost, если .T. то переключиться на другие окна будет нельзя
Win_aDown      = {}    ; нет label внизу окна
; есть label внизу окна {имя-label, высота, цвет фона, цвет текста, центровка, сам текст}
Win_lClrDown4  = .T.   ; смена цвета фона нижней строки: номер массива - (4)={42,97,181} для Win10
Win_aDown      = { "LblDown", "myGetTitleHeight() + 2", "WHITE()", {42,97,181}, .T., "! тут можна щось написати ...." }
; ВНИМАНИЕ !!! ниже массив будет строкой, так как нет такого ТИПА переменной: GetTitleHeight() + 2 , т.е. неопределён тип
Win_aDown_2    = "{ 'LblDown', myGetTitleHeight() + 2, WHITE, {42,97,181}, .T., '! you can write something here ....' }"
; -------- параметры базы
Dbf_File       = Customer2.dbf ; имя базы
Dbf_Alias      = Customer2
Dbf_CodePage   = UA866
Dbf_Shared     = .T.           ; режим открытия базы
; -------- параметры меню таблицы
Menu_lDebug    = .T.         ; отладка, показ ошибок
Menu_nPosWin   = 1           ; где кнопки: 1-TopWindow, 2-BottomWindow, 3-LeftWindow, 4-RightWindow
Menu_nHAlign   = 0           ; горизонтальные кнопки: 0-LEFT, 1-CENTER, 2-RIGHT
Menu_nVAlign   = 0           ; вертикальные кнопки: 0-TOP , 1-CENTER, 2-BOTTOM
;Menu_aCaption = {"Описание в|Demo_timer.cfg","Карточка","Печать списков","Проверка-4","Выход|из таблицы"}      ; кнопки меню
Menu_aCaption  = { "Опис у|Demo_timer.cfg", "Нове|меню", "Яка мова | у вікні?", "Друк|списків", "Вихід|з таблиці" } ; кнопки меню
Menu_aBColor   = { {0,145,0}              , "BLUE()"   , "GRAY()"             , "GRAY()"      , {189,30,73} }       ; кнопки цвет фона
Menu_aBtnPost  = { 1                      , 2          , 3                    , 4             , 99          }       ; _wPost(Х) - номер события на кнопке
Menu_Icon_1    = { "iDbInfo64x1", "iDbInfo64x2" }
Menu_Icon_2    = { "iDbInfo64x1", "iDbInfo64x2" } 
Menu_Icon_3    = { "iDbInfo64x1", "iDbInfo64x2" } 
Menu_Icon_4    = { "iDbInfo64x1", "iDbInfo64x2" } 
Menu_Icon_5    = { "iExit64x1"  , "iExit64x2"   } 
Menu_nIcoSize  = 48      ; уменьшить иконки до 48х48
Menu_aFont     = { "Comic Sans MS", 14, .T., .F. , 16, "16-увеличение фонта кнопки" }  ; фонт на кнопках
Menu_aFClr     = { "BLACK()" , "YELLOW()" }                                            ; цвет фонта на кнопках
Menu_aHelp     = {}      ; Tooltip кнопки - не сделано
Menu_lTextVert = .F.     ; .T. - вертикальный текст для кнопок
Menu_lTextLeft = .T.     ; .T. - слева текст для кнопок
Menu_nIndent   = 0       ; отступ первой кнопки  - резерв
Menu_nHBtn     = 66      ; высота кнопки
Menu_nWBtn     = 240     ; ширина кнопки
Menu_nGaps     = 5       ; отступ кнопки от края окна
Menu_nGapsBtn  = 10      ; между кнопками по ширине/высоте
Menu_lBtnIco   = .T.     ; F-кнопки без иконок
; -------- параметры tsbrowse
Tsb_lSelector   = .T.                    ; F-убрать в таблице вирт.колонку SELECTOR
Tsb_lColNumber  = .T.                    ; F-убрать в таблице вирт.колонку ORDKEYNO
Tsb_aColNumber  = { 1, 60 }              ; вирт.колонка с номерами - потом автоматом расчитывается ширина колонки
Tsb_lSuperHead  = .T.                    ; F-убрать в таблице суперхидер
Tsb_lSpecHd     = .T.                    ; F-убрать в таблице нумератор
Tsb_cSuperHead1 = UA866                  ; суперхидер 1 графа
Tsb_cSuperHead2 = "Точка зупинки (1) !"  ; суперхидер 2 графа
; -------- цвета tsbrowse
Tsb_lShowZebra  = .T.                               ; T-зебра по цветам: показ чётная\нечётная строка
Tsb_nClr22Bck   = {|| myRGB('CLR_WHITE') }          ; цвет фона чётная\нечётная строка при Tsb_lShowZebra = .T.
Tsb_aBrush      = {168,242,179}                     ; под таблицей - цвет фона окна Win_aBackcolor см.выше
Tsb_nClrNoDbf   = {|| myRGB('COLOR_BTNFACE',.T.) }  ; T-вернуть число цвета - фона селектора/нумератора/вирт.колонки
Tsb_nClrNoEdit  = {|| myRGB({242,163,167},.T.)   }  ; шапка/подвал колонок типа "+=^"
Tsb_nClrBackDel = {|| myRGB({50, 50, 50} ,.T.)   }  ; цвет фона удалённых записей
Tsb_nClrForeDel = {|| myRGB('CLR_GRAY') }           ; текст удалённых записей
Tsb_nClr1Fore   = {|| myRGB('CLR_BLUE') }           ; 1 , текст в ячейках таблицы
Tsb_nClr2Back   = {|| myRGB({217,242,221},.T.)   }  ; 2 , цвет фона в ячейках таблицы - цвет фона окна Win_aBackcolor см.выше 
Tsb_nClr3Fore   = {|| myRGB('CLR_YELLOW') }         ; 3 , текста шапки таблицы
Tsb_nClr4Back   = { 19563304 , 1711408 }            ; 4 , цвет фона шапки таблицы
Tsb_nClr9Fore   = {|| myRGB('CLR_YELLOW') }         ; 9 , текста подвала таблицы
Tsb_nClr10Back  = { 19563304 , 1711408 }            ; 10, цвет фона подвала таблицы
Tsb_nClr17Fore  = {|| myRGB('CLR_WHITE') }          ; 17, текста суперхидера
Tsb_nClr16Back  = { 1711408, 19563304  }            ; 16, цвет фона суперхидера
Tsb_n1Clr17Fore = {|| myRGB('CLR_RED') }            ; 1.17, текста суперхидера колонка 1
;//Tsb_n1Clr16Back = { 1711408, 19563304  }         ; 1.16, цвет фона суперхидера колонка 1
Tsb_n1Clr16Back = { 568567 ,  5493590  }            ; 1.16, цвет фона суперхидера колонка 1
; ----- колонка 1-2 шапки/подвала
Tsb_n12Clr4Back  = { 32768, 65535 }                ; 1-2:4 , фона шапки таблицы колонка 2
Tsb_n12Clr10Back = { 65535, 32768 }                ; 1-2:10, фона подвала таблицы колонка 2
Tsb_n12Clr3Fore  = {|| myRGB('CLR_HRED') }         ; 1-2:3 , текста шапки таблицы колонка 2
Tsb_n12Clr9Fore  = {|| myRGB('CLR_HRED') }         ; 1-2:9 , текста подвала таблицы колонка 2
Tsb_nClrSelectorHdBack = {  32768 ,  32768 }       ; цвет фона шапки/подвала таблицы колонка 1 - Selector
; -------- цвета курсора
Tsb_nClrFocus1   = {|| myRGB({1,1,1},.T.) * -1 }         ; черная окантовка 
Tsb_nClrFocus2   = {|| myRGB('CLR_HRED')  * -1 }         ; красная окантовка 
Tsb_nClrNoFocus1 = {|| myRGB("CLR_RED")   * -1 }         ; окантовка вне фокуса
Tsb_nClrNoFocus2 = {|| myRGB({128,225,225},.T.) *-1 }    ; окантовка вне фокуса
;//Tsb_nClrSeleF = {|| myRGB('COLOR_WINDOWTEXT') * -1  } ; цвет текста ячейки таблицы вне фокуса 
Tsb_nClrSeleF    = {|| myRGB('CLR_SKYPE') }              ; цвет текста ячейки таблицы вне фокуса 

; -------- список колонок tsbrowse                                // edit cell
Tsb_Column_1    = { "ID"         , "+",  4, 0, "Інкременту|запису", .F. } 
Tsb_Column_2    = { "LOGPRN"     , "L",  1, 0, "Друк|записи"      , .T. } 
Tsb_Column_3    = { "CUSTNO"     , "N", 15, 0, "Компанія|номер"   , .T. } 
Tsb_Column_4    = { "COMPANY"    , "C", 30, 0, "Компанія"         , .T. } 
Tsb_Column_5    = { "ADDR1"      , "C", 30, 0, "Адреса-1"         , .T. } 
Tsb_Column_6    = { "ADDR2"      , "C", 30, 0, "not-show"         , .T. }   ; не показывать в таблице эту колонку
Tsb_Column_7    = { "CITY"       , "C", 15, 0, "Місто"            , .T. } 
Tsb_Column_8    = { "STATE"      , "C", 20, 0, "Держава"          , .T. } 
Tsb_Column_9    = { "ZIP"        , "C", 10, 0, "Zip"              , .T. } 
Tsb_Column_10   = { "COUNTRY"    , "C", 20, 0, "Країна"           , .T. } 
Tsb_Column_11   = { "PHONE"      , "C", 15, 0, "Телефон|компанія" , .T. } 
Tsb_Column_12   = { "FAX"        , "C", 15, 0, "Факс|компанія"    , .T. } 
Tsb_Column_13   = { "TAXRATE"    , "N", 19, 4, "Ставка|податку"   , .T. } 
Tsb_Column_14   = { "CONTACT"    , "C", 20, 0, "Контакт"          , .T. } 
Tsb_Column_15   = { "LASTINVOIC" , "C", 30, 0, "ОСТАННІЙ РАХУНОК" , .F. } 
Tsb_Column_16   = { "LASTINVOIC" , "C", 30, 0, "not-show"         , .T. }   ; не показывать в таблице эту колонку
; добавить колонками ширину - цифры это кол-во знаков, а не пикселей, знак "-" это убавить 
Tsb_aWidthCol   = { {"ID", -8}, {"LOGPRN", -3}, {"CUSTNO", -5}, {"FAX", +2}, {"TAXRATE", -4} }
 
;//////////////////////////////////////////////////////////////////////
[Карточка_БД_абоненты]
;Окно, имя-объекта, координаты,                         иконка       цвет окна,    .T. - окно по центру, картинка-фон для Tab       
Окно  = {"Card_Abon",0,0,990,700,"Карточка по абоненту","Abon64x1", "COLOR_OF2003_BLUE", .T., 'TabBlue4x32not' } 

; ВНИМАНИЕ !!! ниже массив будет строкой, так как нет такого ТИПА переменной: COLOR_OF2003_BLUE(), т.е. неопределён тип
; // особенность Ini при считывании, если нет типа, то массив превращается в строку - тип "C"
Окно2 = {"Card_Abon",0,0,990,700,"Карточка по абоненту","Abon64x1", COLOR_OF2003_BLUE(), .T., 'TabBlue4x32not' } 

Секции_вкладок    = { "Вкладка-1"        , "Вкладка-2"        , "Вкладка-3"        , "Вкладка-4"       ,"Вкладка-5"        , "Вкладка-6"        , "Вкладка-7"        , "Вкладка-8"        , "Вкладка-9"    }
Секции_названий   = { "Абонент "         , "Оборудование "    , "Трубка "          , "Оплаты/Книжки"   ,"Работа с долгами" , "Разное "          , "МП РИЦ"           , "Антенна "         , "Служебное "   }
Секции_названийUA = { "Абонент "         , "Обладнання"       , "Трубка"           , "Оплати/Книжки"   ,"Робота з боргами" , "Різне"            , "МП РІЦ"           , "Антена"           , "Службове"     } 
Цвета_вкладок     = { COLOR_OF2003_BLUE(), COLOR_OF2003_BLUE(), COLOR_OF2003_BLUE(),COLOR_OF2003_BLUE(),COLOR_OF2003_BLUE(), COLOR_OF2003_BLUE(), COLOR_OF2003_BLUE(), COLOR_OF2003_BLUE(), COLOR_OF2003_BLUE() } 
Цвет_Recno        = COLOR_YELLOW()  
Цвет_верх_формы   = COLOR_BLUE_METRO()  
Проверка_граф_1   = { "(*) Город"                    , "ABONENT->KCity == 0"                                            }
Проверка_граф_2   = { "(*) Улица"                    , "ABONENT->KStreet == 0"                                          }
Проверка_граф_3   = { "(*) Дом"                      , "ABONENT->NHOUSE == 0"                                           }
Проверка_граф_4   = { "(*) Номер квартиры"           , "ABONENT->NKvar == 0"                                            }
Проверка_граф_5   = { "(*) Дата оплаты с"            , "ABONENT->KVidOpl == 3 .AND. ABONENT->DateOplat == CTOD('')"     }
Проверка_граф_6   = { "(*) Тариф оплаты"             , "ABONENT->KVidOpl == 3 .AND. ABONENT->KTarif == 0"               } 
Проверка_граф_       = { "(*) Тариф2 оплаты" , "ABONENT->KVidOpl == 4" } 
Проверка_граф_резерв = { "(*) Тариф3 оплаты" , "ABONENT->KVidOpl == 5" } 
 
;***************************  Перечень полей TBrowse *************************************************************************************************************************************************
;*                    N_ZAGOL = 1           N_ALIAS=2           N_POLE=3                       N_PICT=4               N_TYPE=5 N_OBRA=6   7      8         9          10        11           12            13        14       15     
;*  NN  =  |         наименование        |    алиас    |         поле бд                    | формат поля               |тип |обработка|итог|сорти-| код поля   | индекс2    |код подсправ.|наим.справ.  | ошибка  | доп.   | метка   
;*         |         графы               |    поля     |       или массив полей бд          |                           |обр.| R или W |подв|ровка | справочник | для справ. |код подсправ.|наим.справ.  | ошибка  | парам. | доступа юзера   
[Карточка_БД_абоненты:Вкладка-1]
Графа_1  = { "Л/с абонента, Старый Л/с"  , ""          , {"RC_abon" ,"?","RC_abon0","?"}     , {"xxxxxxxx","","xxxxxxxx",""}, "A",  "W" , .F.,  3 ,"PIXELS=10" , {"C","I","C","I"}, {"","","",""},    {NIL,"GetAbonRC",NIL,"GetAbonRC"} ,{NIL,"RC_abon" ,NIL,"RC_abon0"},{"Л/счёт:"  ,"","Старый Л/счёт:",""}, "2Card:(RC+RC0)" }   
Графа_2  = { "3 и 4 - Л/с абонента"      , ""          , {"RC_ABON3","?","RC_ABON4","?"}     , {"xxxxxxxx","","xxxxxxxx",""}, "A",  "W" , .F.,  4 ,"PIXELS=10" , {"C","I","C","I"}, {"","","",""},    {NIL,"GetAbonRC",NIL,"GetAbonRC"} ,{NIL,"RC_abon3",NIL,"RC_abon4"},{"3-Л/счёт:","","4-Л/счёт:"     ,""}, "2Card:(RC34)" } 
Графа_3  = { "5, 6, 7 - Л/с абонента"    , ""          , {"RC_NEW18","RC_N18A6","RC_N18A7"}  , {REPL("x",18),REPL("x",18),REPL("x",18)}, "A", "W" , .F.,  5 , "PIXELS=10" , {"C","C","C"} , {"","",""} , {NIL,NIL,NIL} ,{NIL,NIL,NIL},{"5-Л/счёт:","6-Л/счёт:","7-Л/счёт:"}, "2Card:(RC5)" } 
Графа_4  = { "Ф.И.О. абонента "          , ""          , "FIO"                               , REPLICATE("x",55)         , "C",     "#" , .F.,  6 ,            ,            ,"сделал!"    , "OLF:myWrtGetUserLog" ,            } 
Графа_5  = { "Атрибут абонента / Е-майл" , ""          , {"ATTRIBUTE","Email"}               , {REPL("x",32),REPL("x",35)},"A",     "#" , .F.,  7 ,"PIXELS=10" , {"C","C"}  , {"", ""}    ,   {NIL,NIL} ,{NIL,NIL},{"Атрибут абонента","Е-майл"}   } 
Графа_6  = { "(*) Номер квартиры"        , ""          , {"NKvar" ,"CKvar"  }                , {"@R 99999","xxxxx"}      , "A",     "W" , .F.,  8 ,"PIXELS=0"  , {"N","C"}  ,  {"", ""}   ,   {NIL,NIL} ,{ NIL, "OnChange:MyAdrLetter" } , {"Номер квартиры","Буква квартиры"} } 
Графа_7  = { "Телефон абонента (д/м/р)"  , ""          , {"TelFIO","TelFIO3","TelFIO2"}      , {"@R (999) 999-99-99","@R (999) 999-99-99","@R (999) 999-99-99"}, "A",   "#" , .F.,  9 , "PIXELS=5" ,  {"C","C","C"} ,  {"","",""} , {NIL,NIL,NIL} , {NIL,NIL,NIL} , {"Телефон (д.)","Телефон (м.)","Телефон (р.)"} } 
Графа_8  = { "(*) Дата оплаты с"         , ""          , "Ab_DateSay('DateOplat')"           , REPLICATE("x",10)         , "J",     "W" , .F., 11 ,"Ask_DateDA1", "Домофон-дата-оплаты-c", {12,15} , {'DateOplat','DateNach'}, 1 }
Графа_9  = { "(*) Тариф оплаты"          , ""          , "Ab_Tarif('KTarif','DateNach',0)"   , REPLICATE("x",55)         , "J",     "W" , .F., 12 ,"Ask_Tarif"  , "Выбор тарифа оплаты"  , "Тариф_абонента" , {"KTarif"} , 1     } 
Графа_10 = { "Скидка оплаты (%)"         , ""          , "Ab_Skidk('Skidka','DateNach',0)"   , REPLICATE("x",55)         , "J",     "W" , .F., 13 ,"Ask_Skidka" , "Выбор скидок оплаты"  , "Скидки абонента", {"Skidka"} , 1     } 
Графа_11 = { "Примечание"                , ""          , "MRem"                              , "автоформат-внутри"       , "M",     "#" , .F., 14 ,        ,        } 
Графа_12 = { "Дата начисления абон.платы", ""          , "Ab_DateNach(90)"                   , REPLICATE("x",90)         , "C",     "R" , .F., 15 }
Графа_13 = { "Приход и начислено"        , ""          , "Ab_PrNac('DateNach',49)"           , REPLICATE("x",47)         , "C",     "R" , .F., 16 }
Графа_14 = { "Услуга/Cостояние услуги"   , ""          , "Ab_DmfUslStat(47)"                 , REPLICATE("x",47)         , "J",     "W" , .F., 17 ,"Ask_DmfUsl" , "Услуга-Cостояние-услуги"   , {}      , '0'      , 1    }
Графа_15 = { "(*) Дата окончания оплаты" , ""          , "Ab_DateSay('DateDOff')"            , REPLICATE("x",10)         , "J",     "W" , .F., 18 ,"Ask_DateDA2", "Домофон-дата-оплаты-закрыт", {12,15} ,'DateDOff', 1    }
Графа_   = { "Код домофона квартиры"     , ""          , "CodeDmf"                           , REPLICATE("x",15)         , "C",     "#" , .F., 10 ,            ,            ,             ,             ,          , ,  } 
Графа_   = { "Код домофона квартиры"     , ""          , "CodeDmf"                           , REPLICATE("x",15)         , "C",     "#" , .F., 10 ,            ,            ,             ,             ,          , , "2Card:(CodeDmf)" } 
Графа_   = { "Номер квартиры"            , ""          , "cNumKvar"                          , "xxxxx"                   , "C",     "W" , .F.,    } 
Графа_   = { ""                          , ""          , "MEMO3('Mrem',2,'Tab',1)"           , "автоформат-внутри"       , "M",     "R" , .F., 1 ,            ,            } 
Графа_   = { ""                          , ""          , "MEMO3('Mrem',3,'Tab',1)"           , "автоформат-внутри"       , "M",     "R" , .F., 1 ,            ,            } 
