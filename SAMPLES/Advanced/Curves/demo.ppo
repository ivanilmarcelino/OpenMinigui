








ANNOUNCE RDDSYS
#line 54 "S:\Mega\Dev\32\BCC\Minigui\include\i_var.ch"
  MEMVAR _HMG_SYSDATA
#line 18 "demo.prg"
STATIC lBusy := .F.


PROCEDURE Main()












 _DefineWindow ( "Form_1", "Draw Curves - Contributed by Grigory Filatov", 0, 0, 800, 600, .T., .T., .T., .F., .F., {,}, {,}, {|| OnInit()}, ,, , ,, { 255 , 255 , 255 } , {|| DrawCurves()} , .F. , .F. , .T. , "demo.ico" , .F. , "MS Sans Serif" , 8, , , , {|| RefreshPaint()}, , , , , , , , , , .F. , , , , .F. , , , , , .F. , .F. , , , .F. , , , )

   _DefineMainMenu( )
      _DefineMenuPopup( "Test" , , , )
         _DefineMenuItem ( "Do it!" , {|| RefreshPaint()} , , , .F. , .F. ,,,, .F., .F. ,, .F. )
         _DefineMenuItem ( "Exit" , {|| DoMethod ( _HMG_SYSDATA[254] , "Release" )} , , , .F. , .F. ,,,, .F., .F. ,, .F. )
      _EndMenuPopup()
   _EndMenu()



   _DefineButton ( "Button_1", , GetProperty ( "Form_1", "Width" ) - 120, 10, "Close", {|| DoMethod ( "Form_1", "Release" )},,,,,,,, .F., .F.,, .F. , .F., .F., .F., .F., .F., .F.,, )

   _EndWindow ()

   DoMethod ( "Form_1", "Center" )
   _ActivateWindow ( {"Form_1"}, .F., , )

RETURN


STATIC PROCEDURE OnInit

   Domethod ( "Form_1", "Button_1" , "Setfocus" )

   iif( _HMG_SYSDATA[271], CleanProgramMemory(), iif( IsVistaOrLater(), EmptyWorkingSet(), ) )

RETURN


STATIC PROCEDURE RefreshPaint()

   lBusy := .F.

   DoMethod ( "Form_1", "ReDraw" )

RETURN



STATIC FUNCTION DrawCurves()

   STATIC nHeight, nWidth

   LOCAL hWnd := GetProperty ( "Form_1", "Handle" )
   LOCAL hDC, pPS
   LOCAL nI, hPen, hOldPen
   LOCAL cPoints

   IF HB_ISNIL( nHeight )
      nHeight := GetProperty ( "Form_1", "Height" ) -20
      nWidth  := GetProperty ( "Form_1", "Width" )  -20
   ENDIF

   IF ! lBusy .AND. GetUpdateRect(  hWnd, NIL )

      hDC := BeginPaint( hWnd, @pPS )

      FOR nI := 1 TO 20
         hPen    := CreatePen( 0, 5, Random( 65535 ) )
         hOldPen := SelectObject( hDC, hPen )








         cPoints := L2Bin( Random( nWidth  ) ) +  L2Bin( Random( nHeight ) ) +  L2Bin( Random( nWidth  ) ) +  L2Bin( Random( nHeight ) ) +  L2Bin( Random( nWidth  ) ) +  L2Bin( Random( nHeight ) ) +  L2Bin( Random( nWidth  ) ) +  L2Bin( Random( nHeight ) )

         PolyBezier( hDC, cPoints, 4 )
         SelectObject( hDC, hOldPen )

         DeleteObject( hPen )
      NEXT

      EndPaint( hWnd, pPS )

      lBusy := .T.

   ENDIF

RETURN NIL















function PolyBezier( hDC,Points,Amount ) ; local uResult ; Local hInstDLL := LoadLibrary("GDI32.DLL"); Local nProcAddr := GetProcAddress(hInstDLL,"PolyBezier"); uResult := CallDLL(hInstDLL, nProcAddr,, 4, 4, hDC, 10, Points, 4, Amount ) ; FreeLibrary(hInstDLL); return uResult


function CreatePen( Style,Width,Color ) ; local uResult ; Local hInstDLL := LoadLibrary("GDI32.DLL"); Local nProcAddr := GetProcAddress(hInstDLL,"CreatePen"); uResult := CallDLL(hInstDLL, nProcAddr,, 4, 4, Style, 4, Width, 4, Color ) ; FreeLibrary(hInstDLL); return uResult
