#line 54 "S:\Mega\Dev\32\BCC\Minigui\include\i_var.ch"
  MEMVAR _HMG_SYSDATA
#line 110 "myownbut51.prg"
STATIC lXPThemeActive   := .F.





FUNCTION OwnButtonPaint( pdis )

   LOCAL hDC, itemState, itemAction, i, rgbTrans, hWnd, lFlat, lNotrans
   LOCAL oldBkMode, hOldFont, hBrush, nFreeSpace
   LOCAL x1, y1, x2, y2, xp1, yp1, xp2, yp2
   LOCAL aBmp := {}, aMetr, aBtnRc
   LOCAL lDisabled, lSelected, lFocus, lDrawEntire, loFocus, loSelect
   LOCAL nStyle
   LOCAL pozYpic, pozYtext := 0, xPoz
   LOCAL nCRLF, lXPThemeActive := .F.

   LOCAL iButStyle, nnnn, aFill1, aFill2
   LOCAL o, aButStyles, aButMisc

   hDC := GETOWNBTNDC( pdis )

   IF Empty( hDC )
      RETURN ( 1 )
   ENDIF

   IF GETOWNBTNCTLTYPE( pdis ) <> 4
      RETURN ( 1 )
   ENDIF

   itemAction := GETOWNBTNITEMACTION ( pdis )
   lDrawEntire := ( AND( itemAction, 1 ) == 1 )
   loFocus := ( AND( itemAction, 4 ) == 4 )
   loSelect := ( AND( itemAction, 2 ) == 2 )

   IF ! lDrawEntire  .AND. ! loFocus .AND. ! loSelect
      RETURN ( 1 )
   ENDIF

   hWnd := GETOWNBTNHANDLE( pdis )
   aBtnRc := GETOWNBTNRECT( pdis )
   itemState := GETOWNBTNSTATE( pdis )

   i := AScan ( _HMG_SYSDATA[137], hWnd )

   IF ( i <= 0 .OR. _HMG_SYSDATA[135][ i ] <> "OBUTTON" )
      RETURN ( 1 )
   ENDIF


   nCRLF := CountIt( _HMG_SYSDATA[165][ i ] ) + 1
   lDisabled := AND( itemState, 4 ) == 4
   lSelected := AND( itemState, 1 ) == 1
   lFocus := AND( itemState, 16 ) == 16
   lFlat := AND( _HMG_SYSDATA[155][ i ], 16 ) == 16
   lNotrans := AND( _HMG_SYSDATA[155][ i ], 32 ) == 32

   IF ! lNotrans
      rgbTrans := NIL
   ELSE

      IF ! Empty( _HMG_SYSDATA[147][ i ] ) .AND. ! lXPThemeActive
         rgbTrans := ( _HMG_SYSDATA[147][ i, 1 ] + ( _HMG_SYSDATA[147][ i, 2 ] * 256 ) + ( _HMG_SYSDATA[147][ i, 3 ] * 65536 ) )
      ELSE
         rgbTrans := GetSysColor ( 15 )
      ENDIF

   ENDIF


   hOldFont := SelectObject( hDC, _HMG_SYSDATA[167][ i ] )
   aMetr := GetTextMetric( hDC )
   oldBkMode := SetBkMode( hDC, 1 )

   o := _HMG_SYSDATA[424][ i ]
   IF !HB_ISOBJECT( o ) ; o := oHmgData()
   ENDIF
   aButStyles := o:aButStyles
   aButStyles := iif( aButStyles == NIL, _HMG_SYSDATA[260]:aButStyles, aButStyles )

   iButStyle := 1
   aButMisc := { 1, "" }

   IF !Empty( o:cButMisc )
      aButMisc   := { Val ( Token( o:cButMisc, ",", 1 ) ), AllTrim( Token( o:cButMisc, ",", 2 ) ) }
      iButStyle  := AScan( aButStyles, {| ax| ax[ 1 ] = aButMisc[ 1 ] } )
   ENDIF

   IF lSelected

   ELSEIF ! ( _HMG_SYSDATA[164][ i ][ 1 ] == 1 )
      IF  aButStyles[ iButStyle, 2 ] > 0
         aFill1 := aButStyles[ iButStyle, 3 ]
         aFill2 := aButStyles[ iButStyle, 4 ]
         IF aButStyles[ iButStyle, 2 ] = 1
            FillGradient( hDC, aBtnRc[ 2 ], aBtnRc[ 1 ], aBtnRc[ 4 ], aBtnRc[ 3 ], .T., ( aFill1[ 1 ] + ( aFill1[ 2 ] * 256 ) + ( aFill1[ 3 ] * 65536 ) ), ( aFill2[ 1 ] + ( aFill2[ 2 ] * 256 ) + ( aFill2[ 3 ] * 65536 ) ) )
         ELSEIF aButStyles[ iButStyle, 2 ] = 2
            FillGradient( hDC, aBtnRc[ 2 ], aBtnRc[ 1 ], aBtnRc[ 4 ] / 2, aBtnRc[ 3 ], .T., ( aFill1[ 1 ] + ( aFill1[ 2 ] * 256 ) + ( aFill1[ 3 ] * 65536 ) ), ( aFill2[ 1 ] + ( aFill2[ 2 ] * 256 ) + ( aFill2[ 3 ] * 65536 ) )  )
            FillGradient( hDC, aBtnRc[ 4 ] / 2, aBtnRc[ 1 ], aBtnRc[ 4 ], aBtnRc[ 3 ], .T., ( aFill2[ 1 ] + ( aFill2[ 2 ] * 256 ) + ( aFill2[ 3 ] * 65536 ) ), ( aFill1[ 1 ] + ( aFill1[ 2 ] * 256 ) + ( aFill1[ 3 ] * 65536 ) )  )
         ELSEIF aButStyles[ iButStyle, 2 ] = 3
            FillGradient( hDC, aBtnRc[ 2 ], aBtnRc[ 1 ], aBtnRc[ 4 ], aBtnRc[ 3 ], .F., ( aFill1[ 1 ] + ( aFill1[ 2 ] * 256 ) + ( aFill1[ 3 ] * 65536 ) ), ( aFill2[ 1 ] + ( aFill2[ 2 ] * 256 ) + ( aFill2[ 3 ] * 65536 ) ) )
         ELSEIF aButStyles[ iButStyle, 2 ] = 4
            FillGradient( hDC, aBtnRc[ 2 ], aBtnRc[ 1 ], aBtnRc[ 4 ], aBtnRc[ 3 ] / 2, .F., ( aFill1[ 1 ] + ( aFill1[ 2 ] * 256 ) + ( aFill1[ 3 ] * 65536 ) ), ( aFill2[ 1 ] + ( aFill2[ 2 ] * 256 ) + ( aFill2[ 3 ] * 65536 ) )  )
            FillGradient( hDC, aBtnRc[ 2 ], aBtnRc[ 3 ] / 2, aBtnRc[ 4 ], aBtnRc[ 3 ], .F., ( aFill2[ 1 ] + ( aFill2[ 2 ] * 256 ) + ( aFill2[ 3 ] * 65536 ) ), ( aFill1[ 1 ] + ( aFill1[ 2 ] * 256 ) + ( aFill1[ 3 ] * 65536 ) )  )
         ENDIF
      ELSE
         IF ! Empty( _HMG_SYSDATA[147][ i ] )
            hBrush := CreateSolidBrush( _HMG_SYSDATA[147][ i, 1 ], _HMG_SYSDATA[147][ i, 2 ], _HMG_SYSDATA[147][ i, 3 ] )
            FILLRECT( hDC, aBtnRc[ 1 ], aBtnRc[ 2 ], aBtnRc[ 3 ], aBtnRc[ 4 ], hBrush )
            DeleteObject( hBrush )
         ENDIF
      ENDIF

      _HMG_SYSDATA[148][ i ] := aButStyles[ iButStyle, 7 ]

      IF !Empty( aButMisc[ 2 ] )
         DeleteObject ( _HMG_SYSDATA[169][i ] )
         nnnn := _SetBtnPicture (  hDC, _HMG_SYSDATA[158][ i ] )
         _HMG_SYSDATA[169][i ] := nnnn
      ENDIF

      IF aButStyles[ iButStyle, 9 ] = 1
         rectdraw( hWnd, aBtnRc[ 1 ] -1, aBtnRc[ 2 ] -1, aBtnRc[ 4 ] + 1, aBtnRc[ 3 ] + 1, aButStyles[ iButStyle, 10 ], 1, { 255 , 255 , 255 }, .F. )
      ELSEIF aButStyles[ iButStyle, 9 ] = 2
         roundrectdraw( hWnd, aBtnRc[ 1 ] -1, aBtnRc[ 2 ] -1, aBtnRc[ 4 ] + 1, aBtnRc[ 3 ] + 1, 8, 8, aButStyles[ iButStyle, 10 ], 1, { 255 , 255 , 255 }, .F. )
      ENDIF

   ELSE
      IF  aButStyles[ iButStyle, 2 ] > 0
         aFill1 := aButStyles[ iButStyle, 5 ]
         aFill2 := aButStyles[ iButStyle, 6 ]
         IF aButStyles[ iButStyle, 2 ] = 1
            FillGradient( hDC, aBtnRc[ 2 ], aBtnRc[ 1 ], aBtnRc[ 4 ], aBtnRc[ 3 ], .T., ( aFill1[ 1 ] + ( aFill1[ 2 ] * 256 ) + ( aFill1[ 3 ] * 65536 ) ), ( aFill2[ 1 ] + ( aFill2[ 2 ] * 256 ) + ( aFill2[ 3 ] * 65536 ) ) )
         ELSEIF aButStyles[ iButStyle, 2 ] = 2
            FillGradient( hDC, aBtnRc[ 2 ], aBtnRc[ 1 ], aBtnRc[ 4 ] / 2, aBtnRc[ 3 ], .T., ( aFill1[ 1 ] + ( aFill1[ 2 ] * 256 ) + ( aFill1[ 3 ] * 65536 ) ), ( aFill2[ 1 ] + ( aFill2[ 2 ] * 256 ) + ( aFill2[ 3 ] * 65536 ) )  )
            FillGradient( hDC, aBtnRc[ 4 ] / 2, aBtnRc[ 1 ], aBtnRc[ 4 ], aBtnRc[ 3 ], .T., ( aFill2[ 1 ] + ( aFill2[ 2 ] * 256 ) + ( aFill2[ 3 ] * 65536 ) ), ( aFill1[ 1 ] + ( aFill1[ 2 ] * 256 ) + ( aFill1[ 3 ] * 65536 ) )  )
         ELSEIF aButStyles[ iButStyle, 2 ] = 3
            FillGradient( hDC, aBtnRc[ 2 ], aBtnRc[ 1 ], aBtnRc[ 4 ], aBtnRc[ 3 ], .F., ( aFill1[ 1 ] + ( aFill1[ 2 ] * 256 ) + ( aFill1[ 3 ] * 65536 ) ), ( aFill2[ 1 ] + ( aFill2[ 2 ] * 256 ) + ( aFill2[ 3 ] * 65536 ) ) )
         ELSEIF aButStyles[ iButStyle, 2 ] = 4
            FillGradient( hDC, aBtnRc[ 2 ], aBtnRc[ 1 ], aBtnRc[ 4 ], aBtnRc[ 3 ] / 2, .F., ( aFill1[ 1 ] + ( aFill1[ 2 ] * 256 ) + ( aFill1[ 3 ] * 65536 ) ), ( aFill2[ 1 ] + ( aFill2[ 2 ] * 256 ) + ( aFill2[ 3 ] * 65536 ) )  )
            FillGradient( hDC, aBtnRc[ 2 ], aBtnRc[ 3 ] / 2, aBtnRc[ 4 ], aBtnRc[ 3 ], .F., ( aFill2[ 1 ] + ( aFill2[ 2 ] * 256 ) + ( aFill2[ 3 ] * 65536 ) ), ( aFill1[ 1 ] + ( aFill1[ 2 ] * 256 ) + ( aFill1[ 3 ] * 65536 ) )  )
         ENDIF
      ELSE
         IF ! Empty( _HMG_SYSDATA[147][ i ] )
            hBrush := CreateSolidBrush( _HMG_SYSDATA[147][ i, 1 ], _HMG_SYSDATA[147][ i, 2 ], _HMG_SYSDATA[147][ i, 3 ]   )
            FILLRECT( hDC, aBtnRc[ 1 ], aBtnRc[ 2 ], aBtnRc[ 3 ], aBtnRc[ 4 ], hBrush )
            DeleteObject( hBrush )
         ENDIF
      ENDIF


      _HMG_SYSDATA[148][ i ] := aButStyles[ iButStyle, 8 ]

      IF !Empty( aButMisc[ 2 ] )
         DeleteObject ( _HMG_SYSDATA[169][ i ] )
         nnnn := _SetBtnPicture (  hDC, aButMisc[ 2 ] )
         _HMG_SYSDATA[169][i ] := nnnn
      ENDIF

      IF aButStyles[ iButStyle, 9 ] = 1
         rectdraw( hWnd, aBtnRc[ 1 ] -1, aBtnRc[ 2 ] -1, aBtnRc[ 4 ] + 1, aBtnRc[ 3 ] + 1, aButStyles[ iButStyle, 11 ], 1, { 255 , 255 , 255 }, .F. )
      ELSEIF aButStyles[ iButStyle, 9 ] = 2
         roundrectdraw( hWnd, aBtnRc[ 1 ] -1, aBtnRc[ 2 ] -1, aBtnRc[ 4 ] + 1, aBtnRc[ 3 ] + 1, 8, 8, aButStyles[ iButStyle, 11 ], 1, { 255 , 255 , 255 }, .F. )
      ENDIF

   ENDIF

   SetTextColor( hDC, _HMG_SYSDATA[148][ i, 1 ], _HMG_SYSDATA[148][ i, 2 ], _HMG_SYSDATA[148][ i, 3 ] )

   IF ! Empty( _HMG_SYSDATA[169][ i ] )
      IF _HMG_SYSDATA[171][ i ] == 0
         aBmp := GetBitmapSize( _HMG_SYSDATA[169][ i ] )
      ELSEIF _HMG_SYSDATA[171][ i ] == 1
         aBmp := GetIconSize( _HMG_SYSDATA[169][ i ] )
      ENDIF
   ENDIF

   IF AND( _HMG_SYSDATA[155][ i ], 1 ) == 1

      y2 := aMetr[ 1 ] * nCRLF
      x2 := aBtnRc[ 3 ] - 2

      xp2 := iif( ! Empty( aBmp ), aBmp[ 1 ], 0 )
      yp2 := iif( ! Empty( aBmp ), aBmp[ 2 ], 0 )
      xp1 := Round( ( aBtnRc[ 3 ] / 2 ) - ( xp2 / 2 ), 0 )

      IF At( hb_eol(), _HMG_SYSDATA[165][ i ] ) <= 0
         nFreeSpace := Round( ( aBtnRc[ 4 ] - 4 - ( aMetr[ 4 ] + yp2 ) ) / 3, 0 )
         nCRLF := 1
      ELSE
         nFreeSpace := Round( ( aBtnRc[ 4 ] - 4 - ( y2 + yp2 ) ) / 3, 0 )
      ENDIF

      IF !Empty( _HMG_SYSDATA[165][ i ] )


         IF !Empty( _HMG_SYSDATA[169][ i ] )
            IF !( AND( _HMG_SYSDATA[155][ i ], 4 ) == 4 )
               pozYpic := Max( aBtnRc[ 2 ] + nFreeSpace, 5 )
               pozYtext := aBtnRc[ 2 ] + iif( !Empty( aBmp ), nFreeSpace, 0 ) + yp2 + iif( !Empty( aBmp ), nFreeSpace, 0 )
            ELSE
               pozYtext := Max( aBtnRc[ 2 ] + nFreeSpace, 5 )
               aBtnRc[ 4 ] := nFreeSpace + ( ( aMetr[ 1 ] ) * nCRLF ) + nFreeSpace
               pozYpic := aBtnRc[ 4 ]
            ENDIF
         ELSE
            pozYpic := 0
            pozYtext := Round( ( aBtnRc[ 4 ] - y2 ) / 2, 0 )
         ENDIF

      ELSE

         IF ! ( AND( _HMG_SYSDATA[155][ i ], 128 ) == 128 )
            pozYpic := Round( ( ( aBtnRc[ 4 ] / 2 ) - ( yp2 / 2 ) ), 0 )
            pozYtext := 0
         ELSE
            pozYpic := 1
         ENDIF

      ENDIF

      IF ! lDisabled

         IF lSelected

            IF ! lXPThemeActive
               xp1 ++
               xPoz := 2
               pozYtext ++
               pozYpic ++
            ELSE
               xPoz := 0
            ENDIF

            IF ! ( AND( _HMG_SYSDATA[155][ i ], 128 ) == 128 )
               DrawGlyph( hDC, xp1, pozYpic, xp2, yp2, _HMG_SYSDATA[169][ i ], rgbTrans, .F., .F. )
               DrawText( hDC, _HMG_SYSDATA[165][ i ], xPoz, pozYtext - 2, x2,  aBtnRc[ 4 ], 1 )
            ELSE
               DrawGlyph( hDC, aBtnRc[ 1 ] + 4, aBtnRc[ 2 ] + 4, aBtnRc[ 3 ] - 6, aBtnRc[ 4 ] - 6, _HMG_SYSDATA[169][ i ], rgbTrans, .F., .T. )

               DrawText( hDC, _HMG_SYSDATA[165][ i ], xPoz, pozYtext - 2, x2,  aBtnRc[ 4 ], 1 )


            ENDIF

         ELSE

            IF ! ( AND( _HMG_SYSDATA[155][ i ], 128 ) == 128 )
               DrawGlyph( hDC, xp1, pozYpic, xp2, yp2, _HMG_SYSDATA[169][ i ], rgbTrans, .F., .F. )
               DrawText( hDC, _HMG_SYSDATA[165][ i ],  0, pozYtext - 1, x2,  aBtnRc[ 4 ], 1 )
            ELSE
               DrawGlyph( hDC, aBtnRc[ 1 ] + 3, aBtnRc[ 2 ] + 3, aBtnRc[ 3 ] - 6, aBtnRc[ 4 ] - 6, _HMG_SYSDATA[169][ i ], rgbTrans, .F., .T. )

               DrawText( hDC, _HMG_SYSDATA[165][ i ],  0, pozYtext - 1, x2,  aBtnRc[ 4 ], 1 )


            ENDIF

         ENDIF

      ELSE

         IF ! ( AND( _HMG_SYSDATA[155][ i ], 128 ) == 128 )
            DrawGlyph( hDC, xp1, pozYpic, xp2, yp2, _HMG_SYSDATA[169][ i ], , .T., .F. )
            SetTextColor( hDC, GetRed ( GetSysColor ( 20 ) ), GetGreen ( GetSysColor ( 20 ) ), GetBlue ( GetSysColor ( 20 ) ) )
            DrawText( hDC, _HMG_SYSDATA[165][ i ], 2, pozYtext + 1, x2, aBtnRc[ 4 ] + 1, 1 )
            SetTextColor( hDC, GetRed ( GetSysColor ( 16 ) ), GetGreen ( GetSysColor ( 16 ) ), GetBlue ( GetSysColor ( 16 ) ) )
            DrawText( hDC, _HMG_SYSDATA[165][ i ], 0, pozYtext, x2, aBtnRc[ 4 ], 1 )
         ELSE
            DrawGlyph( hDC, aBtnRc[ 1 ] + 4, aBtnRc[ 2 ] + 4, aBtnRc[ 3 ] - 6, aBtnRc[ 4 ] - 6, _HMG_SYSDATA[169][ i ], , .T., .T. )
            SetTextColor( hDC, GetRed ( GetSysColor ( 20 ) ), GetGreen ( GetSysColor ( 20 ) ), GetBlue ( GetSysColor ( 20 ) ) )
            DrawText( hDC, _HMG_SYSDATA[165][ i ], 2, pozYtext + 1, x2, aBtnRc[ 4 ] + 1, 1 )
            SetTextColor( hDC, GetRed ( GetSysColor ( 16 ) ), GetGreen ( GetSysColor ( 16 ) ), GetBlue ( GetSysColor ( 16 ) ) )
            DrawText( hDC, _HMG_SYSDATA[165][ i ], 0, pozYtext, x2, aBtnRc[ 4 ], 1 )
         ENDIF

      ENDIF

   ELSE

      y1 := Round( aBtnRc[ 4 ] / 2, 0 ) - ( aMetr[ 1 ] - 10 )
      y2 := y1 + aMetr[ 1 ]
      x2 := aBtnRc[ 3 ] - 2

      IF ! Empty( _HMG_SYSDATA[169][ i ] )

         xp2 := iif( ! Empty( aBmp ), aBmp[ 1 ], 0 )
         yp2 := iif( ! Empty( aBmp ), aBmp[ 2 ], 0 )
         yp1 := Round( aBtnRc[ 4 ] / 2 - yp2 / 2, 0 )

         IF ! Empty( _HMG_SYSDATA[165][ i ] )

            lDrawEntire := ( aBtnRc[ 3 ] > 109 ) .AND. ( aBtnRc[ 4 ] - yp2 > 16 )
            nStyle := xp2 / 2 - iif( xp2 > 24, 8, 0 )

            IF ! ( AND( _HMG_SYSDATA[155][ i ], 2 ) == 2 )

               xp1 := 5 + iif( lDrawEntire, nStyle, 0 )
               x1 := aBtnRc[ 1 ] + xp1 + xp2

            ELSE

               xp1 := aBtnRc[ 3 ] - xp2 - 5 - iif( lDrawEntire, nStyle, 0 )
               x1 := 3
               x2 := aBtnRc[ 3 ] - xp2 - iif( lDrawEntire, xp2 / 2 + 5, 0 )

            ENDIF

            x1 := aBtnRc[ 1 ]

         ELSE

            xp1 := Round( aBtnRc[ 3 ] / 2 - xp2 / 2, 0 )
            x1 := aBtnRc[ 1 ]

         ENDIF

      ELSE

         xp1 := 2
         xp2 := 0
         yp1 := 0
         yp2 := 0

         x1 := aBtnRc[ 1 ] + xp1

      ENDIF

      IF ! ( AND( _HMG_SYSDATA[155][ i ], 128 ) == 128 )
         y1 := Max( ( ( aBtnRc[ 4 ] / 2 ) - ( nCRLF * aMetr[ 1 ] ) / 2 ) - 1, 1 )
         y2 := ( aMetr[ 1 ] + aMetr[ 5 ] ) * nCRLF
      ENDIF

      IF ! lDisabled

         IF lSelected

            IF ! lXPThemeActive
               x1 += 2
               xp1 ++
               yp1 ++
            ENDIF

            IF ! ( AND( _HMG_SYSDATA[155][ i ], 128 ) == 128 )
               DrawGlyph( hDC, xp1, yp1, xp2, yp2, _HMG_SYSDATA[169][ i ], rgbTrans, .F., .F. )
               DrawText( hDC, _HMG_SYSDATA[165][ i ], x1, y1 + 1, x2, y1 + y2, 1 )
            ELSE
               DrawGlyph( hDC, aBtnRc[ 1 ], aBtnRc[ 2 ], aBtnRc[ 3 ], aBtnRc[ 4 ], _HMG_SYSDATA[169][ i ], rgbTrans, .F., .T. )
               y1 := Max( ( ( aBtnRc[ 4 ] / 2 ) - ( nCRLF * aMetr[ 1 ] ) / 2 ) - 3, 1 )
               DrawText( hDC, _HMG_SYSDATA[165][ i ], x1, y1 + 1, x2, y1 + y2, 1 )
            ENDIF

         ELSE
            IF ! ( AND( _HMG_SYSDATA[155][ i ], 128 ) == 128 )
               DrawGlyph( hDC, xp1, yp1, xp2, yp2, _HMG_SYSDATA[169][ i ], rgbTrans, .F., .F. )
               DrawText( hDC, _HMG_SYSDATA[165][ i ], x1, y1, x2, y1 + y2, 1 )
            ELSE
               DrawGlyph( hDC, aBtnRc[ 1 ], aBtnRc[ 2 ], aBtnRc[ 3 ], aBtnRc[ 4 ], _HMG_SYSDATA[169][ i ], rgbTrans, .F., .T. )
               y1 := Max( ( ( aBtnRc[ 4 ] / 2 ) - ( nCRLF * aMetr[ 1 ] ) / 2 ) - 3, 1 )
               DrawText( hDC, _HMG_SYSDATA[165][ i ], x1, y1, x2, y1 + y2, 1 )
            ENDIF
         ENDIF

      ELSE

         IF ! ( AND( _HMG_SYSDATA[155][ i ], 128 ) == 128 )
            DrawGlyph( hDC, xp1, yp1, xp2, yp2, _HMG_SYSDATA[169][ i ], , .T., .F. )
            SetTextColor( hDC, GetRed ( GetSysColor ( 20 ) ), GetGreen ( GetSysColor ( 20 ) ), GetBlue ( GetSysColor ( 20 ) ) )
            DrawText( hDC, _HMG_SYSDATA[165][ i ], x1 + 1, y1 + 1, x2 + 1, y1 + y2 + 1,  1 )
            SetTextColor( hDC, GetRed ( GetSysColor ( 16 ) ), GetGreen ( GetSysColor ( 16 ) ), GetBlue ( GetSysColor ( 16 ) ) )
            DrawText( hDC, _HMG_SYSDATA[165][ i ], x1, y1, x2, y1 + y2,  1 )
         ELSE
            DrawGlyph( hDC, aBtnRc[ 1 ] + 3, aBtnRc[ 2 ] + 3, aBtnRc[ 3 ] - 6, aBtnRc[ 4 ] - 6, _HMG_SYSDATA[169][ i ], , .T., .T. )

            SetTextColor( hDC, GetRed ( GetSysColor ( 20 ) ), GetGreen ( GetSysColor ( 20 ) ), GetBlue ( GetSysColor ( 20 ) ) )
            DrawText( hDC, _HMG_SYSDATA[165][ i ], x1 + 1, y1 + 1, x2 + 1, y1 + y2 + 1,  1 )
            SetTextColor( hDC, GetRed ( GetSysColor ( 16 ) ), GetGreen ( GetSysColor ( 16 ) ), GetBlue ( GetSysColor ( 16 ) ) )
            DrawText( hDC, _HMG_SYSDATA[165][ i ], x1, y1, x2, y1 + y2,  1 )

         ENDIF
      ENDIF
   ENDIF

RETURN ( 1 )


STATIC FUNCTION CountIt( cText )

   LOCAL nPoz, nCount := 0

   IF At( hb_eol(), cText ) > 0
      while ( nPoz := At( hb_eol(), cText ) ) > 0
         nCount++
         cText := SubStr( cText, nPoz + 2 )
      ENDDO
   ENDIF

RETURN nCount
